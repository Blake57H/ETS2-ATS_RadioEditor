<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>